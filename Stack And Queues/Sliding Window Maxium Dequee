class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int>deq; // so we will be using a deque lol queue would also have worked but liteee
        vector<int>result;
        for(int i=0;i<k;i++)
        {
            
            while( !deq.empty()&&nums[deq.front()]<=nums[i])
            {
                deq.pop_front();
            }
            deq.push_front(i);
        }
        result.push_back(nums[deq.back()]);
        for(int i=k;i<nums.size();i++)
        {
            while(!deq.empty() && deq.back()<(i-k+1))
            {
                deq.pop_back(); // out of the  window
            }
            while(!deq.empty()&&nums[deq.front()]<=nums[i])
            {
                deq.pop_front();
            }
            deq.push_front(i);

            result.push_back(nums[deq.back()]);
        }
        return result;

    }
};
